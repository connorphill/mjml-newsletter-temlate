{"version":3,"sources":["../../src/helpers/mjAttribute.js"],"names":[],"mappings":";;AAAA,OAAO,OAAP,GAAiB;AACf,iBAAe,uBAAS,SAAT,EAAoB;AACjC,QAAM,cAAc,KAAK,WAAL,CAAiB,IAAjB,CAAsB,IAAtB,CAAd,CAD2B;AAEjC,QAAM,mBAAmB,yBAAuB,SAAvB,CAAnB,CAF2B;AAGjC,QAAM,UAAU,YAAY,SAAZ,CAAV,CAH2B;;AAKjC,QAAI,gBAAJ,EAAsB;AACpB,aAAO,SAAS,gBAAT,CAAP,CADoB;KAAtB;;AAIA,QAAI,CAAC,OAAD,EAAU;AACZ,aAAO,CAAP,CADY;KAAd;;AAIA,QAAM,WAAW,QAAQ,KAAR,CAAc,GAAd,CAAX,CAb2B;AAcjC,QAAI,aAAa,EAAb,CAd6B;;AAgBjC,YAAQ,SAAS,MAAT;AACN,WAAK,CAAL;AACE,eAAO,SAAS,OAAT,CAAP,CADF;AADF,WAGO,CAAL;AACE,qBAAa,EAAC,KAAK,CAAL,EAAQ,QAAQ,CAAR,EAAW,MAAM,CAAN,EAAS,OAAO,CAAP,EAA1C,CADF;AAEE,cAFF;AAHF,WAMO,CAAL;AACE,qBAAa,EAAC,KAAK,CAAL,EAAQ,MAAM,CAAN,EAAS,OAAO,CAAP,EAAU,QAAQ,CAAR,EAAzC,CADF;AAEE,cAFF;AANF,WASO,CAAL;AACE,qBAAa,EAAC,KAAK,CAAL,EAAQ,OAAO,CAAP,EAAU,QAAQ,CAAR,EAAW,MAAM,CAAN,EAA3C,CADF;AAEE,cAFF;AATF,KAhBiC;;AA8BjC,WAAO,SAAS,SAAS,WAAW,SAAX,CAAT,KAAmC,CAAnC,CAAhB,CA9BiC;GAApB;;AAiCf,eAAa,qBAAS,KAAT,EAAgB;AAC3B,QAAM,YAAY,oBAAoB,IAApB,CAAyB,MAAM,QAAN,EAAzB,EAA2C,CAA3C,CAAZ,CADqB;;AAG3B,WAAO,EAAE,MAAM,aAAa,IAAb,EAAmB,OAAO,SAAS,KAAT,CAAP,EAAlC,CAH2B;GAAhB;CAlCf","file":"mjAttribute.js","sourcesContent":["module.exports = {\n  paddingParser: function(direction) {\n    const mjAttribute = this.mjAttribute.bind(this)\n    const paddingDirection = mjAttribute(`padding-${direction}`)\n    const padding = mjAttribute('padding')\n\n    if (paddingDirection) {\n      return parseInt(paddingDirection)\n    }\n\n    if (!padding) {\n      return 0\n    }\n\n    const paddings = padding.split(' ')\n    let directions = {}\n\n    switch (paddings.length) {\n      case 1:\n        return parseInt(padding)\n      case 2:\n        directions = {top: 0, bottom: 0, left: 1, right: 1}\n        break;\n      case 3:\n        directions = {top: 0, left: 1, right: 1, bottom: 2}\n        break;\n      case 4:\n        directions = {top: 0, right: 1, bottom: 2, left: 3}\n        break;\n    }\n\n    return parseInt(paddings[directions[direction]] || 0 )\n  },\n\n  widthParser: function(width) {\n    const widthUnit = /[0-9]+([^ ,\\)`]*)/.exec(width.toString())[1]\n\n    return { unit: widthUnit || \"px\", width: parseInt(width) }\n  }\n}\n"]}